export interface CheckAuthPayload {
    authorization: string;
}
export interface LoadPayload {
    authorization: string;
    request_id: string;
    query: any;
}
export interface MetaPayload {
    authorization: string;
}
export declare type SQLInterfaceOptions = {
    port?: number;
    checkAuth: (payload: CheckAuthPayload) => unknown | Promise<unknown>;
    load: (payload: LoadPayload) => unknown | Promise<unknown>;
    meta: (payload: MetaPayload) => unknown | Promise<unknown>;
};
export declare function isSupported(): boolean;
declare type LogLevel = 'error' | 'warn' | 'info' | 'debug' | 'trace';
export declare const setLogLevel: (level: LogLevel) => void;
export declare const registerInterface: (options: SQLInterfaceOptions) => Promise<any>;
export {};
//# sourceMappingURL=index.d.ts.map