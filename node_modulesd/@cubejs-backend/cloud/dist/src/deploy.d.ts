import { CubeCloudClient } from './cloud';
declare type DeployDirectoryOptions = {
    directory: string;
};
export declare class DeployDirectory {
    protected readonly options: DeployDirectoryOptions;
    constructor(options: DeployDirectoryOptions);
    fileHashes(directory?: string): Promise<Record<string, any>>;
    protected filter(file: string): boolean;
    protected fileHash(file: string): Promise<unknown>;
}
declare type DeployHooks = {
    onStart?: Function;
    onUpdate?: Function;
    onUpload?: Function;
    onFinally?: Function;
};
export declare class DeployController {
    protected readonly cubeCloudClient: CubeCloudClient;
    protected readonly hooks: DeployHooks;
    constructor(cubeCloudClient: CubeCloudClient, hooks?: DeployHooks);
    deploy(directory: string): Promise<any>;
}
export {};
//# sourceMappingURL=deploy.d.ts.map