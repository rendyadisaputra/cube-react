import dotenv from '@cubejs-backend/dotenv';
import { CubeCloudClient } from './cloud';
declare type ConfigurationFull = {
    auth: {
        [organizationUrl: string]: {
            auth: string;
        };
    };
    live: {
        [organizationUrl: string]: {
            [deploymentBranchKey: string]: {
                auth: string;
            };
        };
    };
};
declare type ConfigOptions = {
    directory?: string;
    home?: string;
};
declare type Configuration = Partial<ConfigurationFull>;
export declare class Config {
    protected directory: string;
    protected home: string;
    protected readonly cubeCloudClient: CubeCloudClient;
    constructor(options?: ConfigOptions);
    envFile(envFile: string): Promise<dotenv.DotenvParseOutput>;
    addAuthToken(authToken: string, config?: Configuration): Promise<ConfigurationFull>;
    loadConfig(): Promise<Configuration>;
    protected writeConfig(config: any): Promise<void>;
    protected configFile(): {
        cubeCloudConfigPath: string;
        configFile: string;
    };
    protected cubeCloudConfigPath(): string;
    protected dotCubeCloudFile(): string;
    protected loadDotCubeCloud(): Promise<any>;
    protected writeDotCubeCloud(config: any): Promise<void>;
}
export {};
//# sourceMappingURL=config.d.ts.map