import { SourceContainer } from './SourceContainer';
export declare class AppContainer {
    protected rootNode: any;
    static getPackageVersions(appPath: any): any;
    protected sourceContainer: SourceContainer | null;
    protected playgroundContext: Record<string, unknown>;
    protected appPath: string;
    protected packagesPath: string;
    constructor(rootNode: any, { appPath, packagesPath }: {
        appPath: any;
        packagesPath: any;
    }, playgroundContext: any);
    applyTemplates(): Promise<void>;
    protected initDependencyTree(): void;
    protected setChildren(node: any): void;
    protected createInstances(node: any): void;
    protected loadSources(): Promise<SourceContainer>;
    persistSources(sourceContainer: any, packageVersions: any): Promise<void>;
    executeCommand(command: any, args: any, options: any): Promise<void>;
    ensureDependencies(): Promise<string[]>;
    getPackageVersions(): any;
}
//# sourceMappingURL=AppContainer.d.ts.map