/// <reference types="node" />
import { ChildProcess } from 'child_process';
export interface CubeStoreHandlerOptions {
    stdout: (data: Buffer) => void;
    stderr: (data: Buffer) => void;
    onRestart: (exitCode: number | null) => void;
}
export declare class CubeStoreHandler {
    protected readonly config: Readonly<CubeStoreHandlerOptions>;
    protected cubeStore: ChildProcess | null;
    protected cubeStoreStarting: Promise<ChildProcess> | null;
    protected releaseRequested: boolean;
    constructor(config: Readonly<CubeStoreHandlerOptions>);
    protected getBinary(): Promise<string>;
    acquire(): Promise<ChildProcess>;
    release(force?: boolean): Promise<void>;
}
//# sourceMappingURL=process.d.ts.map