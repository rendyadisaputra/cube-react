"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongoBiQuery = void 0;
const moment_timezone_1 = __importDefault(require("moment-timezone"));
const MysqlQuery_1 = require("./MysqlQuery");
class MongoBiQuery extends MysqlQuery_1.MysqlQuery {
    convertTz(field) {
        const tz = moment_timezone_1.default().tz(this.timezone);
        // TODO respect day light saving
        const [hour, minute] = tz.format('Z').split(':');
        const [hourInt, minuteInt] = [parseInt(hour, 10), parseInt(minute, 10) * Math.sign(parseInt(hour, 10))];
        let result = field;
        if (hourInt !== 0) {
            result = `TIMESTAMPADD(HOUR, ${hourInt}, ${result})`;
        }
        if (minuteInt !== 0) {
            result = `TIMESTAMPADD(HOUR, ${minuteInt}, ${result})`;
        }
        return result;
    }
    timeStampCast(value) {
        return `TIMESTAMP(${value})`;
    }
}
exports.MongoBiQuery = MongoBiQuery;
//# sourceMappingURL=MongoBiQuery.js.map