"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RefreshKeys = void 0;
const extension_abstract_1 = require("./extension.abstract");
class RefreshKeys extends extension_abstract_1.AbstractExtension {
    constructor() {
        super(...arguments);
        this.immutablePartitionedRollupKey = (scalarValue) => ({
            sql: (FILTER_PARAMS) => `SELECT ${this.compiler.contextQuery().caseWhenStatement([{
                    sql: FILTER_PARAMS[this.compiler.contextQuery().timeDimensions[0].path()[0]][this.compiler.contextQuery().timeDimensions[0].path()[1]].filter((from, to) => `${this.compiler.contextQuery().nowTimestampSql()} < ${this.compiler.contextQuery().timeStampCast(to)}`),
                    label: scalarValue
                }])}`
        });
    }
}
exports.RefreshKeys = RefreshKeys;
//# sourceMappingURL=RefreshKeys.js.map