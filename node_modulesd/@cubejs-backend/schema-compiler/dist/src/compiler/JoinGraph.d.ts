export class JoinGraph {
    constructor(cubeValidator: any, cubeEvaluator: any);
    cubeValidator: any;
    cubeEvaluator: any;
    nodes: {};
    edges: {};
    builtJoins: {};
    compile(cubes: any, errorReporter: any): void;
    undirectedNodes: {
        [index: string]: any;
    }[] | undefined;
    graph: any;
    buildJoinEdges(cube: any, errorReporter: any): any;
    buildJoinNode(cube: any): {
        [index: number]: unknown;
    };
    buildJoin(cubesToJoin: any): any;
    buildJoinTreeForRoot(root: any, cubesToJoin: any): {
        joins: any[];
        root: any;
    } | null;
    findMultiplicationFactorFor(cube: any, joins: any): boolean;
    checkIfCubeMultiplied(cube: any, join: any): boolean;
    joinsByPath(path: any): any[];
    connectedComponents(): {};
    cachedConnectedComponents: {} | undefined;
    findConnectedComponent(componentId: any, node: any, components: any): void;
}
//# sourceMappingURL=JoinGraph.d.ts.map