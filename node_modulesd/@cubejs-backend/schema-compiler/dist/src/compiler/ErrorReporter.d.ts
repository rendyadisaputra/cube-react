import { SourceLocation } from '@babel/code-frame';
export interface CompilerErrorInterface {
    message: string;
    fileName?: string;
    lineNumber?: string;
    position?: number;
}
export interface SyntaxErrorInterface {
    message: string;
    loc: SourceLocation | null;
}
interface File {
    fileName: string;
    content: string;
}
interface ErrorReporterOptions {
    logger: (msg: string) => void;
}
export declare class ErrorReporter {
    protected readonly parent: ErrorReporter | null;
    protected readonly context: any[];
    protected readonly options: ErrorReporterOptions;
    protected warnings: SyntaxErrorInterface[];
    protected errors: CompilerErrorInterface[];
    protected file: File | null;
    constructor(parent?: ErrorReporter | null, context?: any[], options?: ErrorReporterOptions);
    exitFile(): void;
    inFile(file: File): void;
    warning(e: SyntaxErrorInterface): void;
    syntaxError(e: SyntaxErrorInterface): void;
    error(e: any, fileName?: any, lineNumber?: any, position?: any): void;
    inContext(context: string): ErrorReporter;
    throwIfAny(): void;
    protected rootReporter(): ErrorReporter;
}
export {};
//# sourceMappingURL=ErrorReporter.d.ts.map